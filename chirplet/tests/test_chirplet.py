import unittest
from chirplet import gaussian_chirplet, estimate_gaussian_chirplet_parameters

import numpy as np

class TestCode(unittest.TestCase):

    def test1_chirplet(self):
        """
        """
        t = np.linspace(-3, 3, 10 ** 2)
        y = gaussian_chirplet(t)

        y0 = np.array([  2.46819608e-04 +1.81360106e-19j,
         3.28420192e-04 +1.31479611e-04j,
         3.64274164e-04 +3.47334714e-04j,
         2.95311801e-04 +6.46642645e-04j,
         4.74241300e-05 +9.95555006e-04j,
        -4.53694880e-04 +1.31086527e-03j,
        -1.25502633e-03 +1.44837759e-03j,
        -2.33621527e-03 +1.20440268e-03j,
        -3.56219510e-03 +3.40148390e-04j,
        -4.64020611e-03 -1.36248745e-03j,
        -5.09992431e-03 -4.01062481e-03j,
        -4.32023947e-03 -7.48287427e-03j,
        -1.62563693e-03 -1.13065532e-02j,
         3.53416389e-03 -1.45680220e-02j,
         1.13277555e-02 -1.59076068e-02j,
         2.12453795e-02 -1.36535763e-02j,
         3.18340185e-02 -6.13550416e-03j,
         4.05671946e-02 +7.81868589e-03j,
         4.39658045e-02 +2.82551069e-02j,
         3.80681192e-02 +5.34591932e-02j,
         1.92872922e-02 +7.95033013e-02j,
        -1.44070530e-02 +1.00203255e-01j,
        -6.21765240e-02 +1.07692899e-01j,
        -1.19192621e-01 +9.37341134e-02j,
        -1.76112399e-01 +5.17112660e-02j,
        -2.19551993e-01 -2.09646735e-02j,
        -2.33829641e-01 -1.20547558e-01j,
        -2.03988912e-01 -2.35415754e-01j,
        -1.19752510e-01 -3.46002155e-01j,
         2.03276484e-02 -4.26729857e-01j,
         2.05558572e-01 -4.50110489e-01j,
         4.11765715e-01 -3.92617816e-01j,
         6.02863075e-01 -2.41349968e-01j,
         7.35758882e-01 +1.80208952e-16j,
         7.68249339e-01 +3.07560640e-01j,
         6.68678261e-01 +6.37583434e-01j,
         4.25388873e-01 +9.31471701e-01j,
         5.36069606e-02 +1.12534859e+00j,
        -4.02440963e-01 +1.16277680e+00j,
        -8.73589946e-01 +1.00817654e+00j,
        -1.27609832e+00 +6.57874409e-01j,
        -1.52688198e+00 +1.45799552e-01j,
        -1.56077942e+00 -4.58286187e-01j,
        -1.34612218e+00 -1.05860218e+00j,
        -8.94839317e-01 -1.54990716e+00j,
        -2.64227055e-01 -1.83773953e+00j,
         4.50771967e-01 -1.85810736e+00j,
         1.13378464e+00 -1.59217775e+00j,
         1.66865935e+00 -1.07238225e+00j,
         1.96205486e+00 -3.78155079e-01j,
         1.96205486e+00 +3.78155079e-01j,
         1.66865935e+00 +1.07238225e+00j,
         1.13378464e+00 +1.59217775e+00j,
         4.50771967e-01 +1.85810736e+00j,
        -2.64227055e-01 +1.83773953e+00j,
        -8.94839317e-01 +1.54990716e+00j,
        -1.34612218e+00 +1.05860218e+00j,
        -1.56077942e+00 +4.58286187e-01j,
        -1.52688198e+00 -1.45799552e-01j,
        -1.27609832e+00 -6.57874409e-01j,
        -8.73589946e-01 -1.00817654e+00j,
        -4.02440963e-01 -1.16277680e+00j,
         5.36069606e-02 -1.12534859e+00j,
         4.25388873e-01 -9.31471701e-01j,
         6.68678261e-01 -6.37583434e-01j,
         7.68249339e-01 -3.07560640e-01j,
         7.35758882e-01 -1.80208952e-16j,
         6.02863075e-01 +2.41349968e-01j,
         4.11765715e-01 +3.92617816e-01j,
         2.05558572e-01 +4.50110489e-01j,
         2.03276484e-02 +4.26729857e-01j,
        -1.19752510e-01 +3.46002155e-01j,
        -2.03988912e-01 +2.35415754e-01j,
        -2.33829641e-01 +1.20547558e-01j,
        -2.19551993e-01 +2.09646735e-02j,
        -1.76112399e-01 -5.17112660e-02j,
        -1.19192621e-01 -9.37341134e-02j,
        -6.21765240e-02 -1.07692899e-01j,
        -1.44070530e-02 -1.00203255e-01j,
         1.92872922e-02 -7.95033013e-02j,
         3.80681192e-02 -5.34591932e-02j,
         4.39658045e-02 -2.82551069e-02j,
         4.05671946e-02 -7.81868589e-03j,
         3.18340185e-02 +6.13550416e-03j,
         2.12453795e-02 +1.36535763e-02j,
         1.13277555e-02 +1.59076068e-02j,
         3.53416389e-03 +1.45680220e-02j,
        -1.62563693e-03 +1.13065532e-02j,
        -4.32023947e-03 +7.48287427e-03j,
        -5.09992431e-03 +4.01062481e-03j,
        -4.64020611e-03 +1.36248745e-03j,
        -3.56219510e-03 -3.40148390e-04j,
        -2.33621527e-03 -1.20440268e-03j,
        -1.25502633e-03 -1.44837759e-03j,
        -4.53694880e-04 -1.31086527e-03j,
         4.74241300e-05 -9.95555006e-04j,
         2.95311801e-04 -6.46642645e-04j,
         3.64274164e-04 -3.47334714e-04j,
         3.28420192e-04 -1.31479611e-04j,
         2.46819608e-04 -1.81360106e-19j])

        self.assertTrue(np.allclose(y, y0))



    def test1_estimate_guassian_chirplet_parameters(self):
        """
        """

        t = np.linspace(-3, 3, 10 ** 3)
        y = gaussian_chirplet(t, alpha1=1., alpha2=0., beta=2., fc=1., phi=0.,
            tau=0.)
        y = np.real(y)

        parameters = estimate_gaussian_chirplet_parameters(y, t)

        self.assertTrue(np.allclose(parameters['alpha1'], 1.0, atol=1e-01))
        self.assertTrue(np.allclose(parameters['alpha2'], 0.0, atol=1e-01))
        self.assertTrue(np.allclose(parameters['beta'], 2.0, atol=1e-01))
        self.assertTrue(np.allclose(parameters['fc'], 1.0, atol=1e-01))
        self.assertTrue(np.allclose(parameters['phi'], 0.0, atol=1e-01))
        self.assertTrue(np.allclose(parameters['tau'], 0.0, atol=1e-01))

if __name__ == '__main__':
    print 'Running unit tests for chirplet'
    unittest.main()